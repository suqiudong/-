{
  "code": "0",
  "meta": "",
  "result": "{'code': 0,'result': '- Output[id, name, email_preferences, addresses, orders] => [id:integer, name:varchar, email_preferences:row(email_format varchar, frequency varchar, categories row(promos boolean, surveys boolean)), addresses:map(varchar, row(street_1 varchar, street_2 varchar, city varchar, state varchar, zip_code varchar)), orders:array(row(order_id varchar, order_date varchar, items array(row(product_id integer, sku varchar, name varchar, price double, qty integer))))]\n    - RemoteExchange[GATHER] => id:integer, name:varchar, email_preferences:row(email_format varchar, frequency varchar, categories row(promos boolean, surveys boolean)), addresses:map(varchar, row(street_1 varchar, street_2 varchar, city varchar, state varchar, zip_code varchar)), orders:array(row(order_id varchar, order_date varchar, items array(row(product_id integer, sku varchar, name varchar, price double, qty integer))))\n        - TableScan[hive:hive:default:customers, originalConstraint = true] => [id:integer, name:varchar, email_preferences:row(email_format varchar, frequency varchar, categories row(promos boolean, surveys boolean)), addresses:map(varchar, row(street_1 varchar, street_2 varchar, city varchar, state varchar, zip_code varchar)), orders:array(row(order_id varchar, order_date varchar, items array(row(product_id integer, sku varchar, name varchar, price double, qty integer))))]\n                LAYOUT: hive\n                addresses := HiveColumnHandle{clientId=hive, name=addresses, hiveType=map < string,struct < street_1: string,street_2: string, city: string, state: string, zip_code: string >> , hiveColumnIndex = 3, columnType = REGULAR, comment = Optional.empty}\nname: = HiveColumnHandle { clientId = hive, name = name, hiveType = string, hiveColumnIndex = 1, columnType = REGULAR, comment = Optional.empty }\norders: = HiveColumnHandle {clientId = hive, name = orders, hiveType = array < struct < order_id: string, order_date: string, items: array < struct < product_id: int, sku: string, name: string, price: double, qty: int >>> > , hiveColumnIndex = 4, columnType = REGULAR, comment = Optional.empty}\nid: = HiveColumnHandle { clientId = hive, name = id, hiveType = int, hiveColumnIndex = 0, columnType = REGULAR, comment = Optional.empty }\nemail_preferences: = HiveColumnHandle {clientId = hive, name = email_preferences, hiveType = struct < email_format: string, frequency: string, categories: struct < promos: boolean, surveys: boolean >> , hiveColumnIndex = 2, columnType = REGULAR, comment = Optional.empty}\n \r\n'}",
  "msg": ""
}