vue项目中使用tinymce富文本编辑器
官网地址：https://www.tiny.cloud/
1：npm 安装tinymce及@tinymce/tinymce-vue两个模块
2：安装完成后，找到node_mudels下的tinymce文件夹复制整个文件夹，到static目录下，（此static目录为初始化项目生成的，不是自己在src下创建的目录）
     否则会报错。
3：下载中文汉化包zh_CN.js
        地址：https://www.tiny.cloud/get-tiny/language-packages/
        完成后，把该包同样放到static文件夹下的tinymce文件夹下（切记不要放错）
4：在需要使用的组件vue中使用
      （1）引入
	import tinymce from "tinymce/tinymce";
	import Editor from "@tinymce/tinymce-vue";
	import "tinymce/themes/silver/theme";
	三步，网络资源给的是过时的参考资料，有些文件是找不到的...
	
	//插件引入（非必要）
	import "tinymce/plugins/image";
	import "tinymce/plugins/media";
	import "tinymce/plugins/table";
	import "tinymce/plugins/lists";
	import "tinymce/plugins/contextmenu";
	import "tinymce/plugins/wordcount";
	import "tinymce/plugins/colorpicker";
	import "tinymce/plugins/textcolor";
      （2）直接使用
	<editor v-model="myValue" :init="init" :disabled="disabled"></editor>
	components中注册
	components: {
     	    Editor
 	 },
      （3）初始化init值
	init:{
	    language_url:"/static/tinymce/langs/zh_CN.js",//必要
	    language: "zh_CN",//必要（中文包）
	    skin_url: "/static/tinymce/skins/ui/oxide/",//样式皮肤（必要），否则会不显示编辑器
	    height: 300,//高度（必要），不设置会不显示
	    plugins: "lists image media table textcolor wordcount contextmenu",//插件扩展（非必要）
	    toolbar: "undo redo |  formatselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | lists image media table | removeformat",
		//工具栏（必要）type: [String, Array],参数可选（参数可看官网），切记  |  符号前后必须空格
	    menubar: true,//顶部工具栏是否显示
	    images_upload_handler: (blobInfo, success, failure) => {
          		const img = "data:image/jpeg;base64," + blobInfo.base64();
          		success(img);
        	    },//上传图片函数，base64格式，此处也可以调后台上传图片接口
	    file_picker_types: "media",//设置上传视频，此时工具栏会显示上传图标
	    file_picker_callback: function(cb, value, meta) {//上传视频事件，
          		if (meta.filetype == "media") {
            		//创建一个隐藏的type=file的文件选择input
            			let input = document.createElement("input");
            			input.setAttribute("type", "file");
            			console.log(input);
            			input.click();
            			input.onchange = function() {
              				let file = this.files[0]; //只选取第一个文件。如果要选取全部，后面注意做修改
              				console.log(file);
				//此时调用上传视频接口，返回视频地址，回调显示
				axios.post("")
              				cb("视频地址", {title: file.name })
            			};
          		}
        	    }
	},
        （4）获取富文本内容
	console.log(this.myValue);
	